{"name": "fetch-catalog", "type": "code/javascript", "content": "// api/fetch-catalog.js\nimport XLSX from 'xlsx';\nimport fetch from 'node-fetch';\n\nexport const config = { runtime: 'nodejs' };\n\nconst BASE_FOLDER = '/סריקות חנות/מוצרים';\n\nasync function getDropboxAccessToken() {\n const params = new URLSearchParams();\n params.append('grant_type', 'refresh_token');\n params.append('refresh_token', process.env.DROPBOX_REFRESH_TOKEN);\n\n const res = await fetch('https://api.dropboxapi.com/oauth2/token', {\n method: 'POST',\n headers: {\n Authorization: 'Basic ' + Buffer.from(${process.env.DROPBOX_APP_KEY}:${process.env.DROPBOX_APP_SECRET}).toString('base64'),\n 'Content-Type': 'application/x-www-form-urlencoded',\n },\n body: params,\n });\n\n if (!res.ok) {\n const error = await res.text();\n console.error('Failed to refresh token:', error);\n throw new Error('Cannot refresh Dropbox token');\n }\n\n const data = await res.json();\n return data.access_token;\n}\n\nasync function getTemporaryLink(path, token) {\n const res = await fetch('https://api.dropboxapi.com/2/files/get_temporary_link', {\n method: 'POST',\n headers: {\n Authorization: Bearer ${token},\n 'Content-Type': 'application/json',\n },\n body: JSON.stringify({ path }),\n });\n if (!res.ok) return null;\n const json = await res.json();\n return json.link;\n}\n\nexport default async function handler(req, res) {\n if (req.method !== 'GET') {\n return res.status(405).json({ error: 'Method not allowed' });\n }\n\n try {\n const token = await getDropboxAccessToken();\n\n const downloadRes = await fetch('https://content.dropboxapi.com/2/files/download', {\n method: 'POST',\n headers: {\n Authorization: Bearer ${token},\n 'Dropbox-API-Arg': JSON.stringify({ path: ${BASE_FOLDER}/catalog.xls }),\n },\n });\n\n if (!downloadRes.ok) {\n const error = await downloadRes.text();\n return res.status(500).json({ error });\n }\n\n const buffer = await downloadRes.buffer();\n const workbook = XLSX.read(buffer, { type: 'buffer' });\n const sheet = workbook.Sheets[workbook.SheetNames[0]];\n const rows = XLSX.utils.sheet_to_json(sheet, { header: 1 });\n\n const catalog = [];\n\n for (let i = 1; i < rows.length; i++) {\n const row = rows[i];\n const barcode = row[2]?.toString().trim();\n const imagePath = ${BASE_FOLDER}/${barcode}.jpg;\n const link = await getTemporaryLink(imagePath, token);\n\n catalog.push({\n name: row[1]?.toString().trim() || '',\n barcode,\n department: row[3]?.toString().trim() || '',\n group: row[4]?.toString().trim() || '',\n price: row[5]?.toString().trim() || '',\n imageUrl: link || '',\n });\n }\n\n res.status(200).json(catalog);\n } catch (err) {\n console.error('Fetch error:', err);\n res.status(500).json({ error: err.message });\n }\n}"}
